pragma solidity ^0.5.1;

contract token {
    mapping (address => uint256) balances;
    address public owner;
    
    constructor (uint256 tokeamount) public {
        owner = msg.sender;
        balances[owner] = tokeamount;
    }
    
    function transferTokens (address to, uint256 amount) public {
        require (balances[msg.sender] >= amount);
            balances[to] += amount;
            balances[msg.sender] -= amount;
    }
    
    function buyTokens () public payable {
        require (msg.value > 0);
        require (balances[owner] >= msg.value);
        balances[owner] -= msg.value;
        balances[msg.sender] += msg.value;
    }
    
    function getContractBalance () public view returns(uint256) {
        return address(this).balance;
    }
    
    function getRich () public {
        require (msg.sender == owner);
        msg.sender.transfer(getContractBalance());
    }
    
    function () external payable {}
    
}
